<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans      
       http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	   http://www.springframework.org/schema/context
	   http://www.springframework.org/schema/context/spring-context-3.2.xsd
	   http://www.springframework.org/schema/tx
	   http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	   http://www.springframework.org/schema/data/jpa
       http://www.springframework.org/schema/data/jpa/spring-jpa.xsd 
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.2.xsd"
	default-lazy-init="true">
	<!-- JPA -->
	<bean id="transactionManager" class="com.ibumeng.vcs.data.DynamicJpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="dataSource" ref="dataSourceCluster" />
	</bean>
	<tx:advice id="txAdviceJpa" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED" read-only="false" rollback-for="Exception" />
			<tx:method name="delete*" propagation="REQUIRED" read-only="false" rollback-for="Exception" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false" rollback-for="Exception" />
			<tx:method name="save*" propagation="REQUIRED" read-only="false" rollback-for="Exception" />
			<tx:method name="proc*" propagation="REQUIRED" read-only="false" rollback-for="Exception" />
			<tx:method name="query*" propagation="REQUIRED" read-only="false" rollback-for="Exception" />
			<tx:method name="get*" read-only="true" />
			<tx:method name="select*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="*" read-only="false" />
		</tx:attributes>
	</tx:advice>
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSourceCluster" />
        <property name="packagesToScan" value="com.ibumeng.vcs.model.entity" />  
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="false" />
				<property name="generateDdl" value="true" />
			</bean>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
				<prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop>
				<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
				<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.connection.isolation">3</prop>
				<prop key="javax.persistence.validation.mode">none</prop>
				<prop key="hibernate.search.default.directory_provider">org.hibernate.search.store.FSDirectoryProvider
				</prop>
				<prop key="hibernate.search.default.indexBase">${java.io.tmpdir}/hibernate.search/index</prop>
			</props>
		</property>
	</bean>
    <jpa:repositories base-package="com.ibumeng.vcs.data.repository"
		entity-manager-factory-ref="entityManagerFactory"
		transaction-manager-ref="transactionManager"
		factory-class="com.ibumeng.vcs.data.repository.BaseRepositoryFactoryBean">
	</jpa:repositories>
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- MyBatis -->
	<bean id="transactionManagerDAO" class="com.ibumeng.vcs.data.DynamicDataSourceTransactionManager">	    
		<property name="dataSource" ref="dataSourceCluster" />
	</bean>  
	<tx:advice id="txAdviceDao" transaction-manager="transactionManagerDAO">
	  <tx:attributes>
		<tx:method name="insert*" propagation="REQUIRED" read-only="false" rollback-for="Exception" />
		<tx:method name="delete*" propagation="REQUIRED" read-only="false" rollback-for="Exception" />
		<tx:method name="update*" propagation="REQUIRED" read-only="false" rollback-for="Exception" />
		<tx:method name="save*" propagation="REQUIRED" read-only="false" rollback-for="Exception" />
		<tx:method name="proc*" propagation="REQUIRED" read-only="false" rollback-for="Exception" />
		<tx:method name="query*" propagation="REQUIRED" read-only="false" rollback-for="Exception" />
		<tx:method name="get*" read-only="true" />
		<tx:method name="select*" read-only="true" />
		<tx:method name="find*" read-only="true" />
		<tx:method name="*" read-only="false" />			
		</tx:attributes>
	</tx:advice>   		
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceCluster" />
		<property name="mapperLocations" value="classpath:com/ibumeng/vcs/data/mapper/*.xml" />	
		<property name="typeAliasesPackage" value="com.ibumeng.vcs.model.entity" />
		<property name="configLocation" value="classpath:mybatisConfig.xml" />	
	</bean>	
	<bean  id="mapperScannerConfigurer"  class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.ibumeng.vcs.data.mapper" />		
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />		
	</bean>
	  <!--*********************事务 AOP*********************-->
	<aop:config>
	    <!-- JPA切入点 -->
		<aop:pointcut id="repositoryMethods" expression="execution(* com.ibumeng.vcs.service.impl..*(..))" />
		<!-- DAO切入点 -->
		<aop:pointcut id="daoMethods" expression="execution(* com.ibumeng.vcs.service.impl..*(..))" /> 
		<!-- serviceMethods 切入点关联事务通知 -->		
		<aop:advisor advice-ref="txAdviceJpa" pointcut-ref="repositoryMethods" />		
		<!-- serviceMethods 切入点关联事务通知 -->
		<aop:advisor advice-ref="txAdviceDao" pointcut-ref="daoMethods" /> 
	</aop:config>
	
</beans>