<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd"
	default-lazy-init="true">
	<!-- kaptcha -->
	<!-- 
	<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
		<property name="config">
			<bean class="com.google.code.kaptcha.util.Config">
				<constructor-arg type="java.util.Properties">
					<props>
						<prop key="kaptcha.image.width">100</prop>
						<prop key="kaptcha.image.height">60</prop>
                        <prop key="kaptcha.noise.impl">com.google.code.kaptcha.impl.NoNoise</prop>
                        <prop key="kaptcha.textproducer.char.string">0123456789abcdefghijklmnopqrstuvwxyz</prop>
						<prop key="kaptcha.textproducer.char.length">4</prop>
					</props>
				</constructor-arg>
			</bean>
		</property>
	</bean>
	 -->

	<!-- check user login status by filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login.jsp" />
		<property name="successUrl" value="index/welcome" />
		<property name="unauthorizedUrl" value="/401.jsp" />
		<property name="filterChainDefinitions">
			<value>
				 <!-- 资源 -->
				/ = anon
				/404.html = anon
                /files/** = anon
                /css/** = anon
                /images/** = anon                
                /js/** = anon  
                /style/** = anon
                /image/** = anon
                /script/** = anon    
	      		/login.jsp=anon
	      		/login/loginAjax=anon
	      		/401.jsp=anon
	      		/captcha/create=anon
	      		/video/videocallback=anon
	      		/video/upload=anon
	      		/ruser/showregist=anon
	      		/ruser/registcount=anon	      		
	      		/download/**=anon	      		
	      		/index/welcome=authc,riAccess		        
		        /**=authc,riAccess
			</value>
			<!-- /** = needLogin permissive : no check access, only work when use 
				a FormAuthenticationFilter or subclass needLogin : check by needLogin filter 
				@see configuration under this. anon : anonymous access -->
		</property>
		<property name="filters">
			<map>
				<entry key="needLogin" value-ref="needLoginAuthenticationFilter" />
				<entry key="riAccess"><bean class="platform.county.jiange.web.security.InvalidAccessAuthorizationFilter"/></entry>
				<entry key="permControl"><bean class="platform.county.jiange.web.security.PermissionsAuthorizationFilter"/></entry>
			</map>
		</property>
	</bean>

	<!-- check user login filter -->
	<bean id="needLoginAuthenticationFilter"
		class="platform.county.jiange.webcomn.security.CaptchaFormAuthenticationFilter" />


	<!-- dao for shiro -->
	<bean id="authenticationRealm" class="platform.county.jiange.web.security.WebCaptchaUserAuthorizingRealm">
		<property name="authorizationCacheName" value="authorization" />
	</bean>
	<!-- cache for shiro -->
	<bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManager" ref="ehCacheManager" />
	</bean>
	<!-- security manager -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="authenticationRealm" />
		<property name="cacheManager" ref="shiroCacheManager" />
	</bean>

	<!-- setup SecurityUtils -->
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>

	<!-- make Shiro's lifecyclebean working -->
	<bean id="shiroLifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

</beans>